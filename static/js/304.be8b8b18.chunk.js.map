{"version":3,"file":"static/js/304.be8b8b18.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFd,cACtBG,EADsB,gBAITA,EAASC,KAJA,cAItBA,EAJsB,yBAKrBA,GALqB,2CAAH,qDAQdC,EAAa,mCAAG,WAAOC,GAAP,yFACJJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,oBACcN,EADd,oBADI,cACrBG,EADqB,gBAIRA,EAASC,KAJD,cAIrBA,EAJqB,yBAKpBA,GALoB,2CAAH,sDAQbG,EAAkB,mCAAG,WAAOC,GAAP,yFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CQ,EAD/C,gCADS,cAC1BL,EAD0B,gBAIbA,EAASC,KAJI,cAI1BA,EAJ0B,yBAKzBA,GALyB,2CAAH,sDAQlBK,EAAe,mCAAG,WAAOH,GAAP,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BACsBN,EADtB,oBADM,cACvBG,EADuB,gBAIVA,EAASC,KAJC,cAIvBA,EAJuB,yBAKtBA,GALsB,2CAAH,sDAQfM,EAAe,mCAAG,WAAOJ,GAAP,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BACsBN,EADtB,2BADM,cACvBG,EADuB,gBAIVA,EAASC,KAJC,cAIvBA,EAJuB,yBAKtBA,GALsB,2CAAH,qD,4EClCfO,EAAS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAE/B,OAAO,8BACJD,GACC,gBAAKE,IAAG,0CAAqCF,GAC3CG,IAAKF,EACLG,MAAM,OACNC,OAAO,UAET,gBAAKH,IAAI,iGACPC,IAAKF,EACLG,MAAM,OACNC,OAAO,UAGd,C,oPCfYC,EAAeC,EAAAA,GAAAA,IAAH,gHAMZC,EAAKD,EAAAA,GAAAA,GAAH,6CAIFE,EAAMF,EAAAA,GAAAA,IAAH,qDAKHG,EAAKH,EAAAA,GAAAA,GAAH,6DAMFI,GAASJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,gR,mBCfNM,EAAO,WAElB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAmBf,OAjBFC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,uGACO/B,EAAAA,EAAAA,MADP,mBAGF,KAFTgC,EADW,EACXA,SADW,uBAInBC,IAAAA,OAAAA,KAAqB,2BAJF,0BAQrBN,EAAUK,GARW,2CAAH,qDAWlBD,IAAeG,OAAM,SAACC,GACtBF,IAAAA,OAAAA,QAAA,gCAAiDE,GAClD,GACJ,GAAC,KAGI,UAAClB,EAAD,YACE,SAACE,EAAD,8BACA,8BACEO,EAAOU,KAAI,YAAiC,IAA9BxB,EAA6B,EAA7BA,MAAOP,EAAsB,EAAtBA,GAAIgC,EAAkB,EAAlBA,YACvB,OAAO,yBACHzB,IACF,SAACS,EAAD,WACI,UAACC,EAAD,CAASgB,IAAIC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,OAAkB,CAAEnC,GAAIA,IAAOoC,MAAO,CAAEC,KAAMd,GAAxE,WACE,SAACR,EAAD,WACA,SAACV,EAAA,EAAD,CAAQC,OAAQ0B,EAAazB,MAAOA,MAErCA,QAPUP,EAWpB,SAIN,EAED,G","sources":["Api/Api.js","components/Poster/Poster.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6e3f0e76f4e133cf6c14fe47c545e154';\n\nexport const getPopularFilm = async () => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n  \nexport const getInfoByFilm = async (id) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n\nexport const searchMoviesbyName = async (query) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n","import React from \"react\";\nimport PropType from \"prop-types\";\n\nexport const Poster = ({ poster, title }) => {\n\n  return <>\n    {poster ?\n      <img src={`https://image.tmdb.org/t/p/w500/${poster}`}\n        alt={title}\n        width=\"100%\"\n        height=\"100%\"\n      /> :\n      <img src=\"https://p.kindpng.com/picc/s/736-7369205_play-button-png-pic-video-default-transparent-png.png\"\n        alt={title}\n        width=\"100%\"\n        height=\"100%\"\n      />}\n  </>\n};\n\nPoster.propTypes = {\n  poster: PropType.string,\n  title: PropType.string.isRequired\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DivContainer = styled.div`\npadding: 0 10px;\nborder-radius: 5px;\nbox-shadow: rgba(0, 0, 0, 0.3) 0px 1px 3px 1px;\n`;\n\nexport const H1 = styled.h1`\ntext-align: center;\n`;\n\nexport const Div = styled.div`\nwidth: 50px;\nheight: 50px;\n`;\n\nexport const Li = styled.li`\ndisplay: block;\nmargin-top: 5px;\n\n`;\n\nexport const LinkLi = styled(Link)`\ndisplay: flex;\nalign-items: center;\ngap: 15px;\ntext-decoration: none;\ncolor: #154c79;\nborder: 1px solid #eeeee4;\nborder-radius: 4px;\nscale: 1;\n&:hover, \n:focus {\n    color: blue;\n    scale: 1.02;\n}\nline-height: 1.1;\nfont-size: 20px;\n`;","\nimport { useState, useEffect } from \"react\";\nimport Notiflix from 'notiflix';\nimport { getPopularFilm } from \"../../Api/Api\"\nimport { generatePath, useLocation } from \"react-router-dom\";\nimport { PAGE_NAME } from \"router/paths\";\nimport { Li, Div, H1, LinkLi, DivContainer } from \"./Home.styled\";\nimport { Poster } from \"components/Poster/Poster\";\n\nexport const Home = () => {\n\n  const [ movies, setMovies ] = useState([]);\n\n  const location = useLocation();\n  \n  useEffect(() => {\n      const apiDataMovie = async () => {\n        const { results } = await getPopularFilm();\n        \n        if ( results === 0) {\n        Notiflix.Notify.info('Sorry, No video list :(');\n        return;\n        }\n        \n      setMovies(results);\n      };\n\n      apiDataMovie().catch((error) => {\n      Notiflix.Notify.warning(`Something went wrong! ${error}`);\n    });\n},[]);\n\n    return (\n      <DivContainer>\n        <H1>Trending today</H1>\n        <ul> {\n          movies.map(({ title, id, poster_path }) => {\n            return <div key={id}>\n              { title &&\n              <Li >\n                  <LinkLi  to={generatePath(PAGE_NAME.movies, { id: id })} state={{ from: location }}>\n                    <Div>\n                    <Poster poster={poster_path} title={title}/>\n                    </Div>\n                  {title}\n                  </LinkLi>\n              </Li> }\n              </div>\n        })}\n       </ul>\n      </DivContainer>\n    );\n  };\n  \n  export default Home;"],"names":["BASE_URL","API_KEY","getPopularFilm","axios","fetchAPI","data","getInfoByFilm","id","searchMoviesbyName","query","getMovieCredits","getMovieReviews","Poster","poster","title","src","alt","width","height","DivContainer","styled","H1","Div","Li","LinkLi","Link","Home","useState","movies","setMovies","location","useLocation","useEffect","apiDataMovie","results","Notiflix","catch","error","map","poster_path","to","generatePath","PAGE_NAME","state","from"],"sourceRoot":""}