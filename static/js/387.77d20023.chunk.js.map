{"version":3,"file":"static/js/387.77d20023.chunk.js","mappings":"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","sources":["Api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6e3f0e76f4e133cf6c14fe47c545e154';\n\nexport const getPopularFilm = async () => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n  \nexport const getInfoByFilm = async (id) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n\nexport const searchMoviesbyName = async (query) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const fetchAPI = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const data = await fetchAPI.data;\n  return data;\n};\n","import styled from \"styled-components\";\n\nexport const Ul = styled.ul`\npadding: 5px;\ndisplay: flex;\ngap: 20px;\nwidth: 1200px;\nflex-wrap: wrap;\n`;\n\nexport const Li = styled.li`\npadding: 2px;\nwidth: 220px;\n`;\n\nexport const Title = styled.h4`\nmargin: 0px;\nmargin-top: 7px;\n`;\n\nexport const Text = styled.p`\nmargin: 0px;\nmargin-top: 7px;\n`;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\nimport { useEffect, useState } from \"react\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { getMovieCredits } from \"Api/Api\";\nimport { Ul, Li, Title, Text } from \"./Cast.styled\";\n\nexport const Cast = () => {\n    const [actors, setActors] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [loading, setLoading] = useState(false);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        setStatus('loading');\n\n        const getCastbyFilm = async () => {\n            const { cast } = await getMovieCredits(id);\n\n            if (cast === 0) {\n                Notiflix.Notify.info('Sorry, No actors list :(');\n                return;\n            }\n            setActors(cast);\n            setStatus('fulfilled');\n        }\n        getCastbyFilm()\n            .catch((error) => {\n                Notiflix.Notify.warning(`Something went wrong! ${error}`);\n                setStatus('error');\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [id])\n\n    if (status === 'idle' || loading) {\n        return <Loader />\n    }\n\n    if (status === 'error') {\n        return <> Error, Something went wrong!</>\n    }\n\n    if (actors.length === 0) {\n        return <Title>There is no cast list for this movie!</Title>\n    }\n    \n    return <Ul>\n        {actors.map(({ credit_id\n, name, character, popularity, profile_path }) => {\n            return <Li key={credit_id}>\n                {profile_path\n                    ? <img src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                        alt={name} width=\"220px\" height=\"280px\" />\n                    : <img src=\"https://www.seekpng.com/png/small/245-2454602_tanni-chand-default-user-image-png.png\"\n                        alt={name} width=\"220px\" height=\"280px\" />}\n                <Title>{name}</Title>\n                <Text>Character: {character}</Text>\n                <Text>Popularity: {popularity}%</Text>\n            </Li>\n        })}\n    </Ul>\n};\n\nexport default Cast;","\nimport React from \"react\";\nimport { MagnifyingGlass } from 'react-loader-spinner'\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/>\n    )\n}"],"names":["BASE_URL","API_KEY","getPopularFilm","axios","fetchAPI","data","getInfoByFilm","id","searchMoviesbyName","query","getMovieCredits","getMovieReviews","Ul","styled","Li","Title","Text","Cast","useState","actors","setActors","status","setStatus","loading","setLoading","useParams","useEffect","getCastbyFilm","cast","Notiflix","catch","error","finally","Loader","length","map","credit_id","name","character","popularity","profile_path","src","alt","width","height","visible","ariaLabel","wrapperStyle","wrapperClass","glassColor","color"],"sourceRoot":""}